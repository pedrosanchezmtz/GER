<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:tns="http://soa.estrellaroja.com.mx/erpInvoiceInstallmentsAP" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:ns0="http://soa.estrellaroja.com.mx/ERPIntegrationApiTec" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:cmn="http://soa.estrellaroja.com.mx/EstrellaRojaCommons" xmlns:wo="http://soa.estrellaroja.com.mx/erpMaintenanceWorkOrders">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/ERPIntegrationApiTec.xsd"/>
            <oracle-xsl-mapper:rootElement name="GetInvoiceInstallmentsAPRq" namespace="http://soa.estrellaroja.com.mx/ERPIntegrationApiTec"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/External/InvoiceAP/erpInvoiceInstallmentsAP.xsd"/>
            <oracle-xsl-mapper:rootElement name="getInvoiceInstallmentsAPRq" namespace="http://soa.estrellaroja.com.mx/erpInvoiceInstallmentsAP"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.4.0(XSLT Build 190828.0353.3300) AT [SUN NOV 26 10:38:06 CST 2023].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:getInvoiceInstallmentsAPRq>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:finder">
            <tns:finder>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:finder"/>
            </tns:finder>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:fields">
            <tns:fields>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:fields"/>
            </tns:fields>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:expand">
            <tns:expand>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:expand"/>
            </tns:expand>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:dependency">
            <tns:dependency>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:dependency"/>
            </tns:dependency>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:onlyData">
            <tns:onlyData>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:onlyData"/>
            </tns:onlyData>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:limit">
            <tns:limit>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:limit"/>
            </tns:limit>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:offset">
            <tns:offset>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:offset"/>
            </tns:offset>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:orderBy">
            <tns:orderBy>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:orderBy"/>
            </tns:orderBy>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:q">
            <tns:q>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:q"/>
            </tns:q>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:totalResults">
            <tns:totalResults>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:totalResults"/>
            </tns:totalResults>
         </xsl:if>
         <xsl:if test="/ns0:GetInvoiceInstallmentsAPRq/tns:links">
            <tns:links>
               <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/tns:links"/>
            </tns:links>
         </xsl:if>
         <tns:invoice_id>
            <xsl:value-of select="/ns0:GetInvoiceInstallmentsAPRq/invoice_id"/>
         </tns:invoice_id>
      </tns:getInvoiceInstallmentsAPRq>
   </xsl:template>
</xsl:stylesheet>